const urls = new Map()
/** java.net */
Java.perform(function() {
	/** Java URL*/
	let JavaURL = Java.use("java.net.URL");

	console.log('\n\n[+] Using "java.net.URL"\n');

	JavaURL.$init.overload("java.lang.String").implementation = function(url) {
		if (!urls.get(url)) {
			console.log('[+] java.net.URL: url =>', url);
			urls.set(url, true);
		} 

		this.$init.overload("java.lang.String").call(this, url);
	}
	
	//------------------------------------------------------------------------------------//

	/** Java URI*/
	let JavaURI = Java.use("java.net.URI");

	console.log('\n\n[+] Using "java.net.URI"\n');

	JavaURI.$init.overload("java.lang.String").implementation = function(url) {
		if (!urls.get(url)) {
			console.log('[+] java.net.URI: url =>', url);
			urls.set(url, true);
		}
		this.$init.overload("java.lang.String").call(this, url);
	}

	//------------------------------------------------------------------------------------//

	/** HttpURLConnection*/
	let HttpURLConnection = Java.use("java.net.HttpURLConnection");

	console.log('\n\n[+] Using "java.net.HttpURLConnection"\n');

	HttpURLConnection.$init.overload("java.net.URL").implementation = function(url) {
		if (!urls.get(url)) {
			console.log('[+] java.net.HttpURLConnection: url =>', url);
			urls.set(url, true);
		}
		
		this.$init.call(this, url);
	}
});